{"version":3,"file":"static/js/544.dfd8554b.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/MovieCard/MovieCard.styled.jsx","components/Similar/Similar.styled.jsx","components/RecommendationItem/RecommendationItem.styled.jsx","components/RecommendationItem/RecommendationItem.jsx","components/Similar/Similar.jsx","helpers/api.js"],"sourcesContent":["import { devices } from \"constants\";\nimport styled from \"styled-components\";\n\nexport const CastTitle = styled.h2`\nmargin-bottom: 10px;\n`\n\nexport const CastList = styled.ul`\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\nmargin: -5px;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1); \n`;\n\nexport const Actor = styled.li`\nwidth: calc((100% - 6 * 5px) / 3);\nmargin: 5px;\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\n@media screen and (${devices.tablet}){\n    width: calc((100% - 10 * 5px) / 5);\n}\n@media screen and (${devices.desktop}){\n    width: calc((100% - 14 * 5px) / 7);\n}\n`\n\nexport const Photo = styled.img`\nwidth: 100%;\nheight: 150px;\nobject-fit: cover;\n`\n\nexport const ActorCredits = styled.p`\n    font-size: 14px;\n    font-family: 'Prompt', sans-serif;\n    line-height: 1.4;\n`","import { devices } from \"constants\";\nimport styled from \"styled-components\";\n\nexport const ErrorWrapper = styled.div`\nposition: fixed;\ntop: 50%;\nleft: 50%;\nbackground-color: rgba(0, 0, 0, 0.2);\ntransform: translate(-50%, -50%);\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\nalign-items: center;\nwidth: 100%;\nheight: 100%;\nz-index: 99;\ngap: 10px;\n& svg {\n    width: 70px;\n    height: 70px;\n    fill: ${props => props.theme.darkRed};\n    color: ${props => props.theme.red};\n}\n`\n\nexport const ErrorMessage = styled.p`\n    font-size: 22px;\n    color: ${props => props.theme.red};\n    font-weight: 700;\n    font-family: 'Prompt', sans-serif;\n    @media screen and (${devices.tablet}) {\n        font-size: 30px;\n    }\n`","import {TbError404} from 'react-icons/tb'\nimport { ErrorMessage, ErrorWrapper } from './Error.styled'\n\nexport const Error = () => {\n    return (<ErrorWrapper>\n    <TbError404/><ErrorMessage>Something went wrong</ErrorMessage>\n    </ErrorWrapper>)\n}","import styled from \"styled-components\";\nimport { devices } from \"constants\";\nimport { motion } from 'framer-motion';\n\nexport const Card = styled(motion.li)`\n    width: calc((100% - 5px * 4) / 2);\n    margin: 5px;\n    background-color: ${props => props.theme.decorativeLight};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1); \n    @media screen and (${devices.tablet}){\n        width: calc((100% - 5px * 8) / 3);\n    }\n    @media screen and (${devices.desktop}) {\n        width: calc((100% - 8px * 10) / 4);\n        margin: 8px;\n    }\n    &:hover, &:focus {\n        transform: scale(1.04);\n    }\n`\n\nexport const PosterWrapper = styled.div`\n    height: 232px;\n    width: 100%;\n    position: relative;\n    @media screen and (${devices.tablet}) {\n        height: 370px;\n    } \n    @media screen and (${devices.desktop}) {\n        height: 426px;\n    } \n`\n\nexport const Poster = styled(motion.img)`\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n`\n\nexport const Title = styled.p`\n    font-size: 20px;\n    text-align: center;\n    margin-top: 8px;\n`\n\nexport const Rate = styled.span`\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    color: ${props => props.theme.decorativeLight};\n    padding: 4px;\n    border-radius: 8px;\n    ${(props) => {\n        switch (props.rateType) {\n            case 'good':\n                return `background-color: #295f48;`;\n            case 'bad':\n                return `background-color: #440700`;\n            default:\n                return `background-color: #295f48;`;\n        }\n    }}\n`","import styled from \"styled-components\";\n\nexport const SimilarList = styled.ul`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin: -5px;\n`","import { devices } from \"constants\";\nimport styled from \"styled-components\";\n// import { Link } from 'react-router-dom';\n\nexport const Recommandation = styled.li`\n    width: calc((100% - 4 * 5px) / 2);\n    margin: 5px;\n    @media screen and (${devices.tablet}) {\n        width: calc((100% - 8 * 5px) / 4);\n    }\n    @media screen and (${devices.desktop}) {\n        width: calc((100% - 10 * 5px) / 5);\n    }\n`\n\nexport const PosterWrapper = styled.div`\n    position: relative;\n    border: 2px solid ${p => p.theme.beige};\n    height: 200px;\n    overflow: hidden;\n    width: 100%;\n    @media screen and (${devices.tablet}) {\n        height: 250px;\n    }\n    @media screen and (${devices.desktop}) {\n        height: 320px;\n    }\n`\n\nexport const Poster = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`\n\n    export const Title = styled.p`\n    font-size: 16px;\n    margin-top: 5px;\n    @media screen and (${devices.tablet}) {\n        font-size: 18px;\n    }\n    @media screen and (${devices.desktop}) {\n        font-size: 20px;\n    }\n`","import PropTypes from \"prop-types\";\nimport { imagePath } from \"constants\";\nimport { Poster, PosterWrapper, Recommandation, Title } from \"./RecommendationItem.styled\";\nimport { Rate } from \"components/MovieCard/MovieCard.styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const RecommendationItem = ({ film, location }) => {\n    const { poster_path, title, vote_average, id } = film;\n    return (\n    <Recommandation>\n        <Link to={`/movies/${id}`} state={{from: location}}>\n            <PosterWrapper>\n                <Poster src={poster_path ? `${imagePath.default}${poster_path}` : imagePath.sample} />\n                <Rate rateType={vote_average > 6 ? 'good' : 'bad'}>{vote_average.toFixed(1)}</Rate>\n            </PosterWrapper>\n            <Title>{title}</Title>\n        </Link>\n    </Recommandation>)\n}\n\nRecommendationItem.propTypes = {\n    film: PropTypes.shape({\n        poster_path: PropTypes.string,\n        title: PropTypes.string,\n        vote_average: PropTypes.number,\n        id: PropTypes.number\n    }).isRequired,\n    location: PropTypes.object,\n}","import { CastTitle } from \"components/Cast/Cast.styled\";\nimport { Error } from \"components/Error/Error\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { STATUS } from \"constants\";\nimport { getMovieSimilar } from \"helpers/api\";\nimport { useEffect, useState} from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { SimilarList } from \"./Similar.styled\";\nimport { RecommendationItem } from \"components/RecommendationItem/RecommendationItem\";\n\nconst similarVariants = {\n    initial: { opacity: 0 },\n    isOn: { opacity: 1, transition: { type: \"spring\" } },\n}\n\nconst Similar = () => {\n    const { movieId } = useParams();\n    const [status, setStatus] = useState(STATUS.IDLE);\n    const [recommendation, setRecommendation] = useState([]);\n    const location = useLocation();\n\n    useEffect(() => {\n        setStatus(STATUS.PENDING);\n        async function fetchData() {\n            try {\n                const list = await getMovieSimilar(movieId);\n                setRecommendation(list.results);\n                setStatus(STATUS.RESOLVED);\n            } catch (e) {\n                setStatus(STATUS.REJECTED);\n            }\n        }\n        fetchData()\n    }, [movieId]);\n\n    if (status === STATUS.IDLE) {\n        return (<CastTitle>Suggestions for you based on current movie</CastTitle>)\n    } else if (status === STATUS.RESOLVED) {\n        return (<motion.div\n            initial={\"initial\"}\n            animate={\"isOn\"}\n            variants={similarVariants}>\n            <CastTitle>Suggestions for you based on current movie</CastTitle>\n            {recommendation.length > 0 ? <SimilarList>\n                {recommendation.map(item => \n                <RecommendationItem \n                film={item} \n                key={item.id} \n                location={location}/>)}\n            </SimilarList> : <p>No matches with this film</p>}\n        </motion.div>)\n    } else if (status === STATUS.REJECTED) {\n        return (<Error />);\n    } else if (status === STATUS.PENDING) {\n        return (<Loader />);\n    }\n}\n\nexport default Similar;","import axios from \"axios\";\n\nconst API_KEY = 'a5ff046cd300d2bbc6befba4bd859295';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING = '/trending/movie/day';\nconst SEARCH = '/search/movie';\nconst MOVIE = '/movie/'\nconst COLLECTION ='/collection/';\n\nexport const getTrendingMovies = async (page = 1) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        page: page\n    })\n    const response = await axios.get(`${BASE_URL}${TRENDING}?${searchParams}`)\n    return response.data;\n}\n\nexport const searchMovies = async (query, page = 1) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        query: query, \n        page: page\n    })\n    const response = await axios.get(`${BASE_URL}${SEARCH}?${searchParams}`);\n    return response.data\n}\n\nexport const getMovie = async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}?${searchParams}`);\n    return response.data\n}\n\nexport const getMovieReviews = async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}/reviews?${searchParams}`);\n    return response.data\n}\n\nexport const getMovieCredits = async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}/credits?${searchParams}`);\n    return response.data\n}\n\nexport const getMovieVideo= async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}/videos?${searchParams}`);\n    return response.data\n}\n\nexport const getMovieSimilar = async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}/similar?${searchParams}`);\n    return response.data\n}\n\nexport const getMovieCollection = async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${COLLECTION}${id}/?${searchParams}`);\n    return response.data;\n}"],"names":["CastTitle","styled","CastList","Actor","devices","Photo","ActorCredits","ErrorWrapper","props","theme","darkRed","red","ErrorMessage","Error","Card","motion","decorativeLight","PosterWrapper","Poster","Title","Rate","rateType","SimilarList","Recommandation","p","beige","RecommendationItem","film","location","poster_path","title","vote_average","id","to","state","from","src","imagePath","toFixed","similarVariants","initial","opacity","isOn","transition","type","movieId","useParams","useState","STATUS","status","setStatus","recommendation","setRecommendation","useLocation","useEffect","getMovieSimilar","list","results","fetchData","animate","variants","length","map","item","Loader","API_KEY","BASE_URL","TRENDING","SEARCH","MOVIE","getTrendingMovies","page","searchParams","URLSearchParams","api_key","axios","response","data","searchMovies","query","getMovie","getMovieReviews","getMovieCredits","getMovieVideo"],"sourceRoot":""}