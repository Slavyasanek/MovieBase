{"version":3,"file":"static/js/247.5297fddc.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Cast/Cast.styled.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/Movie/Movie.styled.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { motion } from \"framer-motion\";\nimport { getMovieCredits } from \"helpers/api\"\nimport { CastList, Actor, ActorCredits, Photo, CastTitle } from \"./Cast.styled\";\nimport { imagePath, STATUS } from \"constants\";\nimport { MovieDetail } from \"components/Movie/Movie.styled\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Error } from \"components/Error/Error\";\nimport { useSelector } from \"react-redux\";\nimport { selectLanguage } from \"redux/films/selectors\";\nimport { LANGUAGES } from \"redux/films/constants\";\n\nconst castVariants = {\n    initial: { opacity: 0 },\n    isOn: { opacity: 1, transition: { type: \"spring\" } },\n    exit: {opacity: 0}\n}\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const [status, setStatus] = useState(STATUS.IDLE);\n    const language = useSelector(selectLanguage);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        setStatus(STATUS.PENDING);\n        async function getCast() {\n            try {\n                const result = await getMovieCredits(movieId, language);\n                setStatus(STATUS.RESOLVED);\n                setCast(result.cast);\n            } catch (e) {\n                setStatus(STATUS.REJECTED);\n            }\n        }\n        getCast();\n    }, [movieId, language]);\n    if (status === STATUS.PENDING) {\n        return (<Loader />)\n    } else if (status === STATUS.RESOLVED || status === STATUS.IDLE) {\n        return (<motion.div\n            initial={\"initial\"}\n            animate={\"isOn\"}\n            exit={\"exit\"}\n            variants={castVariants}>\n            <CastTitle>{language === LANGUAGES.ENG ? \"Cast\" : 'Актори'}</CastTitle>\n            {cast.length > 0 \n            ? <CastList>\n                {cast.map(({ id, character, profile_path, name }) => (\n                <Actor key={id}>\n                    <Photo\n                        src={profile_path ? `${imagePath.default}${profile_path}` : imagePath.sample}\n                        alt={character}\n                        height={150} />\n                    {name && <ActorCredits><MovieDetail>{language === LANGUAGES.ENG ? 'Name:' : `Ім\\x27я:`}</MovieDetail> {name}</ActorCredits>}\n                    {character && <ActorCredits><MovieDetail> {language === LANGUAGES.ENG ? 'Character:' : 'Персонаж:'}</MovieDetail> {character}</ActorCredits>}\n                </Actor>))}\n            </CastList> : <p>{language === LANGUAGES.ENG ? 'No cast info' : 'Немає інформації'}</p>}\n        </motion.div>)\n    } else if (status === STATUS.REJECTED) {\n        return (<Error />)\n    }\n}\n\nexport default Cast;","import { devices } from \"constants\";\nimport styled from \"styled-components\";\n\nexport const CastTitle = styled.h2`\nmargin-bottom: 10px;\n`\n\nexport const CastList = styled.ul`\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\nmargin: -5px;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1); \n`;\n\nexport const Actor = styled.li`\nwidth: calc((100% - 6 * 5px) / 3);\nmargin: 5px;\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\npadding: 5px;\n\tbox-sizing: border-box;\n@media screen and (${devices.tablet}){\n    width: calc((100% - 10 * 5px) / 5);\n}\n@media screen and (${devices.desktop}){\n    width: calc((100% - 14 * 5px) / 7);\n}\n`\n\nexport const Photo = styled.img`\n    width: 100%;\n    height: 150px;\n    object-fit: contain;\n    object-position: center;\n    @media screen and (${devices.tablet}){\n        height: 200px;\n    }\n`\n\nexport const ActorCredits = styled.p`\n    font-size: 14px;\n    font-family: 'Prompt', sans-serif;\n    line-height: 1.4;\n`","import { devices } from \"constants\";\nimport styled from \"styled-components\";\n\nexport const ErrorWrapper = styled.div`\nposition: fixed;\ntop: 50%;\nleft: 50%;\nbackground-color: rgba(0, 0, 0, 0.2);\ntransform: translate(-50%, -50%);\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\nalign-items: center;\nwidth: 100%;\nheight: 100%;\nz-index: 99;\ngap: 10px;\n& svg {\n    width: 70px;\n    height: 70px;\n    fill: ${props => props.theme.darkRed};\n    color: ${props => props.theme.red};\n}\n`\n\nexport const ErrorMessage = styled.p`\n    font-size: 22px;\n    color: ${props => props.theme.red};\n    font-weight: 700;\n    font-family: 'Prompt', sans-serif;\n    @media screen and (${devices.tablet}) {\n        font-size: 30px;\n    }\n`","import {TbError404} from 'react-icons/tb'\nimport { ErrorMessage, ErrorWrapper } from './Error.styled'\n\nexport const Error = () => {\n    return (<ErrorWrapper>\n    <TbError404/><ErrorMessage>Something went wrong</ErrorMessage>\n    </ErrorWrapper>)\n}","import { devices } from \"constants\";\nimport styled from \"styled-components\";\nimport { imagePath } from \"constants\";\n\nexport const MovieWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    margin-bottom: 20px;\n@media screen and (${devices.tablet}){\n    flex-direction: row;\n    gap: 30px;\n}\n@media screen and (${devices.desktop}) {\n    gap: 50px;        \n}\n&::after{\n    content: \"\";\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background: ${props => props.back ? `url(${imagePath.default}${props.back})` : `url(${imagePath.oddBackground})`};\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-attachment: scroll;\n    z-index: -1;\n    opacity: 0.3;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1); \n    @media screen and (${devices.tablet}) {\n        background-attachment: fixed;\n    }\n}\n`\nexport const PosterWrapper = styled.div`\n    border: 2px solid ${props => props.theme.red};\n    @media screen and (${devices.tablet}) {\n        height: 100%;\n        width: 40%;\n        flex-shrink: 0;\n    }\n    @media screen and (${devices.desktop}) {\n        width: 30%;\n    }\n`\n\nexport const Slogan = styled.li`\n    font-style: italic;\n    font-size: 16px;\n    @media screen and (${devices.tablet}) {\n        font-size: 14px;\n    }\n`\n\nexport const Poster = styled.img`\n    object-fit: cover;\n    width: 100%;\n    height: auto;\n`\n\nexport const MovieData = styled.ul`\n   display: flex;\n   flex-direction: column;\n   gap: 8px;\n   font-size: 16px;\n   @media screen and (${devices.desktop}) {\n     font-size: 20px;\n     gap: 12px;\n     line-height: 1.2;\n    }\n`\nexport const MovieDetail = styled.span`\n    background-color: ${props => props.theme.red};\n    color: ${props => props.theme.beige};\n    padding: 2px 3px;\n    border-radius: 8px;\n    margin-right: 5px;\n`\nexport const CompaniesList = styled.ul`\n    display: inline-flex;\n    align-items: center;\n    gap: 5px;\n`\n\nexport const Company = styled.img`\n    width: 50px;\n    filter: grayscale(50%);\n    @media screen and (${devices.desktop}) {\n        width: 120px;\n        aspect-ratio: 3/2;\n        object-fit: contain;\n    }\n`\n\nexport const HomepageLink = styled.a`\n    text-decoration: underline;\n    font-weight: 700;\n    background-color: ${props => props.theme.beige};\n    color: ${props => props.theme.red};\n    padding: 2px 3px;\n    border-radius: 8px;\n    margin-right: 5px;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1); \n    &:hover, &:focus {\n        background-color: ${props => props.theme.red};\n    color: ${props => props.theme.beige};\n    }\n`"],"names":["castVariants","initial","opacity","isOn","transition","type","exit","useState","cast","setCast","STATUS","status","setStatus","language","useSelector","selectLanguage","movieId","useParams","useEffect","getMovieCredits","result","getCast","animate","variants","LANGUAGES","length","map","id","character","profile_path","name","src","imagePath","alt","height","CastTitle","styled","CastList","Actor","devices","Photo","ActorCredits","ErrorWrapper","props","theme","darkRed","red","ErrorMessage","Error","MovieWrapper","back","PosterWrapper","Slogan","Poster","MovieData","MovieDetail","beige","CompaniesList","Company","HomepageLink"],"sourceRoot":""}