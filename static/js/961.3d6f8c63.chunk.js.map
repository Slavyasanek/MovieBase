{"version":3,"file":"static/js/961.3d6f8c63.chunk.js","mappings":"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","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","components/Movie/Movie.styled.jsx","components/TypedTitle/TypedTitle.jsx","helpers/api.js","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/Movie/Movie.jsx","components/OddInfo/OddInfo.styled.jsx","components/OddInfo/OddInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { devices } from \"constants\";\nimport styled from \"styled-components\";\n\nexport const ErrorWrapper = styled.div`\nposition: fixed;\ntop: 50%;\nleft: 50%;\nbackground-color: rgba(0, 0, 0, 0.2);\ntransform: translate(-50%, -50%);\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\nalign-items: center;\nwidth: 100%;\nheight: 100%;\nz-index: 99;\ngap: 10px;\n& svg {\n    width: 70px;\n    height: 70px;\n    fill: ${props => props.theme.darkRed};\n    color: ${props => props.theme.red};\n}\n`\n\nexport const ErrorMessage = styled.p`\n    font-size: 22px;\n    color: ${props => props.theme.red};\n    font-weight: 700;\n    font-family: 'Prompt', sans-serif;\n    @media screen and (${devices.tablet}) {\n        font-size: 30px;\n    }\n`","import {TbError404} from 'react-icons/tb'\nimport { ErrorMessage, ErrorWrapper } from './Error.styled'\n\nexport const Error = () => {\n    return (<ErrorWrapper>\n    <TbError404/><ErrorMessage>Something went wrong</ErrorMessage>\n    </ErrorWrapper>)\n}","import { devices } from \"constants\";\nimport styled from \"styled-components\";\nimport { imagePath } from \"constants\";\n\nexport const MovieWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 20px;\nmargin-bottom: 20px;\n@media screen and (${devices.tablet}){\n    flex-direction: row;\n    gap: 30px;\n}\n@media screen and (${devices.desktop}) {\n    gap: 50px;        \n}\n&::after{\n    content: \"\";\n    position: fixed;\n    width: 120%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background: ${props => props.back ? `url(${imagePath.default}${props.back})` : `url(${imagePath.oddBackground})`};\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    filter: blur(2px);\n    z-index: -1;\n    opacity: 0.3;\n}\n`\nexport const PosterWrapper = styled.div`\n    border: 2px solid ${props => props.theme.red};\n    @media screen and (${devices.tablet}) {\n        height: 100%;\n        width: 40%;\n        flex-shrink: 0;\n    }\n    @media screen and (${devices.desktop}) {\n        width: 30%;\n    }\n`\n\nexport const Slogan = styled.li`\n    font-style: italic;\n    font-size: 16px;\n    @media screen and (${devices.tablet}) {\n        font-size: 14px;\n    }\n`\n\nexport const Poster = styled.img`\n    object-fit: cover;\n    width: 100%;\n    height: auto;\n`\n\nexport const MovieData = styled.ul`\n   display: flex;\n   flex-direction: column;\n   gap: 8px;\n   font-size: 16px;\n   @media screen and (${devices.desktop}) {\n     font-size: 20px;\n     gap: 12px;\n     line-height: 1.2;\n    }\n`\n\nexport const MovieDetail = styled.span`\n    background-color: ${props => props.theme.red};\n    color: ${props => props.theme.beige};\n    padding: 2px 3px;\n    border-radius: 8px;\n`","import { TypeAnimation } from 'react-type-animation';\nimport  PropTypes  from \"prop-types\";\n\nexport const TypedTitle = ({ typing }) => {\n    return (<>\n        <TypeAnimation\n            sequence={typing}\n            wrapper='h1'\n            style={\n                {\n                    color: '#440700',\n                    fontSize: '26px'\n                }\n            }\n        />\n    </>\n    )\n}\n\nTypedTitle.propTypes = {\n    typing: PropTypes.array.isRequired\n}","import axios from \"axios\";\n\nconst API_KEY = 'a5ff046cd300d2bbc6befba4bd859295';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING = '/trending/movie/day';\nconst SEARCH = '/search/movie';\nconst MOVIE = '/movie/'\n\nexport const getTrendingMovies = async (page = 1) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        page: page\n    })\n    const response = await axios.get(`${BASE_URL}${TRENDING}?${searchParams}`)\n    return response.data;\n}\n\nexport const searchMovies = async (query, page = 1) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        query: query, \n        page: page\n    })\n    const response = await axios.get(`${BASE_URL}${SEARCH}?${searchParams}`);\n    return response.data\n}\n\nexport const getMovie = async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}?${searchParams}`);\n    return response.data\n}\n\nexport const getMovieReviews = async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}/reviews?${searchParams}`);\n    return response.data\n}\n\nexport const getMovieCredits = async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}/credits?${searchParams}`);\n    return response.data\n}\n\nexport const getMovieVideo= async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}/videos?${searchParams}`);\n    return response.data\n}","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const BtnBack = styled(Link)`\n    background-color: ${props => props.theme.darkRed};\n    color: ${props => props.theme.decorativeLight};\n    padding: 5px 15px;\n    border-radius: 16px;\n    margin-bottom: 20px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: max-content;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    & svg {\n        fill: ${props => props.theme.decorativeLight};\n        width: 30px;\n        height: 30px;\n    }\n    &:hover, &:focus, &.active {\n        background-color: ${props => props.theme.beige};\n        color: ${props => props.theme.darkRed};\n    }\n`","import { BtnBack } from \"./BackLink.styled\"\nimport { IoReturnUpBackOutline } from 'react-icons/io5'\n\nexport const BackLink = ({ to }) => {\n    return (<>\n        <BtnBack to={to}> <IoReturnUpBackOutline/> Back</BtnBack>\n    </>)\n}","import { TypedTitle } from \"components/TypedTitle/TypedTitle\";\nimport { MovieWrapper, Poster, MovieData, MovieDetail, Slogan, PosterWrapper } from \"./Movie.styled\"\nimport { imagePath } from \"constants\";\n\nexport const Movie = ({ film, background }) => {\n    const { poster_path, genres, overview, title, original_title, production_companies, release_date, tagline } = film;\n    const date = new Date(release_date);\n    const formatDate = `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`\n\n    return (<MovieWrapper back={background}>\n        <PosterWrapper>\n            <Poster src={poster_path ? `${imagePath.default}${poster_path}` : imagePath.sample} />\n        </PosterWrapper>\n        <MovieData>\n            <li key={'title'}>\n                <TypedTitle typing={[1000, `${title}`]} />\n            </li>\n            {tagline && <Slogan key={'tag'}>\n                {tagline}\n            </Slogan>}\n            {original_title && <li key={original_title}>\n                <MovieDetail>Original Title:</MovieDetail> {original_title}\n            </li>}\n            {genres.length > 0 && <li key={'genres'}>\n                <MovieDetail>Genres:</MovieDetail> {genres.map(genre => genre.name).join(', ')}\n            </li>}\n            {release_date && <li key={release_date}>\n                <MovieDetail>Year:</MovieDetail> {formatDate}\n            </li>}\n            {production_companies.length > 0 && <li key={'production'}>\n                <MovieDetail>Production:</MovieDetail> {production_companies.map(company => company.name).join(\", \")}\n            </li>}\n            {overview && <li key={'description'}>\n                <MovieDetail>Description:</MovieDetail> {overview}\n            </li>}\n        </MovieData>\n    </MovieWrapper>)\n}","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const OddWrapper = styled.div`\nmargin-bottom: 20px;`\n\nexport const OptionTitle = styled.p`\n    font-size: 20px;\n    color: ${props => props.theme.darkRed};\n    margin-bottom: 10px;\n    font-weight: 700;\n`\n\nexport const OptionList = styled.ul`\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n`\n\nexport const Option = styled(NavLink)`\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    background-color: ${props => props.theme.beige};\n    color: ${props => props.theme.darkRed};\n    border-radius: 8px;\n    padding: 5px 10px;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    & svg {\n        height: 30px;\n        width: 30px;\n    }\n    &.active {\n        background-color: ${props => props.theme.darkRed};\n        color: ${props => props.theme.beige};\n        box-shadow: 0px 10px 34px -11px rgba(0,0,0,0.75);\n    }\n`","import { OptionList, OptionTitle, Option, OddWrapper } from \"./OddInfo.styled\"\nimport { BiCommentDots } from 'react-icons/bi';\nimport { VscAccount } from 'react-icons/vsc';\n\nexport const OddInfo = () => {\n    return (\n        <OddWrapper>\n            <OptionTitle>View additional information</OptionTitle>\n            <OptionList>\n                <Option to=\"cast\"><VscAccount/> Cast</Option>\n                <Option to=\"reviews\"><BiCommentDots/> Reviews</Option>\n            </OptionList>\n        </OddWrapper>\n    )\n}","import { Suspense, useState, useEffect, useRef } from \"react\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Movie } from \"components/Movie/Movie\";\nimport { OddInfo } from \"components/OddInfo/OddInfo\";\nimport { Error } from \"components/Error/Error\";\nimport { STATUS } from \"constants\";\nimport { getMovie } from \"helpers/api\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const [status, setStatus] = useState(STATUS.IDLE);\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLink = useRef(location.state?.from || '/')\n\n    useEffect(() => {\n        setStatus(STATUS.PENDING);\n        async function getFilm() {\n            try {\n                const movie = await getMovie(movieId);\n                setMovie(movie);\n                setStatus(STATUS.RESOLVED);\n            } catch (e) {\n                setStatus(STATUS.REJECTED);\n            }\n        }\n        getFilm()\n    }, [movieId])\n    if (status === STATUS.RESOLVED) {\n        return (\n            <>\n                <BackLink to={backLink.current} />\n                <Movie film={movie} background={movie.backdrop_path} />\n                <OddInfo />\n                <Suspense fallback={<Loader />}>\n                    <Outlet />\n                </Suspense>\n            </>)\n    } else if (status === STATUS.PENDING) {\n        return (<Loader/>)\n    } else if (status === STATUS.REJECTED) {\n        return (<Error/>)\n    }\n}\nexport default MovieDetails;"],"names":["ErrorWrapper","styled","props","theme","darkRed","red","ErrorMessage","devices","Error","MovieWrapper","back","imagePath","PosterWrapper","Slogan","Poster","MovieData","MovieDetail","beige","TypedTitle","typing","sequence","wrapper","style","color","fontSize","API_KEY","BASE_URL","TRENDING","SEARCH","MOVIE","getTrendingMovies","page","searchParams","URLSearchParams","api_key","axios","response","data","searchMovies","query","getMovie","id","getMovieReviews","getMovieCredits","BtnBack","Link","decorativeLight","BackLink","to","Movie","film","background","poster_path","genres","overview","title","original_title","production_companies","release_date","tagline","date","Date","formatDate","getDate","getMonth","getFullYear","src","length","map","genre","name","join","company","OddWrapper","OptionTitle","OptionList","Option","NavLink","OddInfo","useState","movie","setMovie","STATUS","status","setStatus","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","getFilm","current","backdrop_path","Suspense","fallback","Loader"],"sourceRoot":""}