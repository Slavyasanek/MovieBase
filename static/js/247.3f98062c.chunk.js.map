{"version":3,"file":"static/js/247.3f98062c.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Cast/Cast.styled.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/Movie/Movie.styled.jsx","helpers/api.js"],"sourcesContent":["import { getMovieCredits } from \"helpers/api\"\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { CastList, Actor, ActorCredits, Photo, CastTitle } from \"./Cast.styled\";\nimport { imagePath } from \"constants\";\nimport { MovieDetail } from \"components/Movie/Movie.styled\";\nimport { STATUS } from \"constants\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Error } from \"components/Error/Error\";\nimport { motion } from \"framer-motion\";\n\nconst castVariants = {\n    initial: { opacity: 0 },\n    isOn: { opacity: 1, transition: { type: \"spring\" } },\n    exit: {opacity: 0}\n}\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const [status, setStatus] = useState(STATUS.IDLE);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        setStatus(STATUS.PENDING);\n        async function getCast() {\n            try {\n                const result = await getMovieCredits(movieId);\n                setStatus(STATUS.RESOLVED);\n                setCast(result.cast);\n            } catch (e) {\n                setStatus(STATUS.REJECTED);\n            }\n        }\n        getCast();\n    }, [movieId])\n    if (status === STATUS.PENDING) {\n        return (<Loader />)\n    } else if (status === STATUS.RESOLVED || status === STATUS.IDLE) {\n        return (<motion.div\n            initial={\"initial\"}\n            animate={\"isOn\"}\n            exit={\"exit\"}\n            variants={castVariants}\n        >\n            <CastTitle>Cast</CastTitle>\n            {cast.length > 0 ? <CastList>\n                {cast.map(({ id, character, profile_path, name }) => (<Actor key={id}>\n                    <Photo\n                        src={profile_path ? `${imagePath.default}${profile_path}` : imagePath.sample}\n                        alt={character} />\n                    {name && <ActorCredits><MovieDetail>Name:</MovieDetail> {name}</ActorCredits>}\n                    {character && <ActorCredits><MovieDetail> Character:</MovieDetail> {character}</ActorCredits>}\n                </Actor>))}\n            </CastList> : <p>No cast info</p>}\n        </motion.div>)\n    } else if (status === STATUS.REJECTED) {\n        return (<Error />)\n    }\n}\n\nexport default Cast;","import { devices } from \"constants\";\nimport styled from \"styled-components\";\n\nexport const CastTitle = styled.h2`\nmargin-bottom: 10px;\n`\n\nexport const CastList = styled.ul`\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\nmargin: -5px;\n`;\n\nexport const Actor = styled.li`\nwidth: calc((100% - 6 * 5px) / 3);\nmargin: 5px;\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\n@media screen and (${devices.tablet}){\n    width: calc((100% - 10 * 5px) / 5);\n}\n@media screen and (${devices.desktop}){\n    width: calc((100% - 14 * 5px) / 7);\n}\n`\n\nexport const Photo = styled.img`\nwidth: 100%;\nheight: 150px;\nobject-fit: cover;\n`\n\nexport const ActorCredits = styled.p`\n    font-size: 14px;\n    font-family: 'Prompt', sans-serif;\n    line-height: 1.4;\n`","import { devices } from \"constants\";\nimport styled from \"styled-components\";\n\nexport const ErrorWrapper = styled.div`\nposition: fixed;\ntop: 50%;\nleft: 50%;\nbackground-color: rgba(0, 0, 0, 0.2);\ntransform: translate(-50%, -50%);\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\nalign-items: center;\nwidth: 100%;\nheight: 100%;\nz-index: 99;\ngap: 10px;\n& svg {\n    width: 70px;\n    height: 70px;\n    fill: ${props => props.theme.darkRed};\n    color: ${props => props.theme.red};\n}\n`\n\nexport const ErrorMessage = styled.p`\n    font-size: 22px;\n    color: ${props => props.theme.red};\n    font-weight: 700;\n    font-family: 'Prompt', sans-serif;\n    @media screen and (${devices.tablet}) {\n        font-size: 30px;\n    }\n`","import {TbError404} from 'react-icons/tb'\nimport { ErrorMessage, ErrorWrapper } from './Error.styled'\n\nexport const Error = () => {\n    return (<ErrorWrapper>\n    <TbError404/><ErrorMessage>Something went wrong</ErrorMessage>\n    </ErrorWrapper>)\n}","import { devices } from \"constants\";\nimport styled from \"styled-components\";\nimport { imagePath } from \"constants\";\n\nexport const MovieWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    margin-bottom: 20px;\n@media screen and (${devices.tablet}){\n    flex-direction: row;\n    gap: 30px;\n}\n@media screen and (${devices.desktop}) {\n    gap: 50px;        \n}\n&::after{\n    content: \"\";\n    position: fixed;\n    width: 120%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background: ${props => props.back ? `url(${imagePath.default}${props.back})` : `url(${imagePath.oddBackground})`};\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    filter: blur(2px);\n    z-index: -1;\n    opacity: 0.3;\n}\n`\nexport const PosterWrapper = styled.div`\n    border: 2px solid ${props => props.theme.red};\n    @media screen and (${devices.tablet}) {\n        height: 100%;\n        width: 40%;\n        flex-shrink: 0;\n    }\n    @media screen and (${devices.desktop}) {\n        width: 30%;\n    }\n`\n\nexport const Slogan = styled.li`\n    font-style: italic;\n    font-size: 16px;\n    @media screen and (${devices.tablet}) {\n        font-size: 14px;\n    }\n`\n\nexport const Poster = styled.img`\n    object-fit: cover;\n    width: 100%;\n    height: auto;\n`\n\nexport const MovieData = styled.ul`\n   display: flex;\n   flex-direction: column;\n   gap: 8px;\n   font-size: 16px;\n   @media screen and (${devices.desktop}) {\n     font-size: 20px;\n     gap: 12px;\n     line-height: 1.2;\n    }\n`\nexport const MovieDetail = styled.span`\n    background-color: ${props => props.theme.red};\n    color: ${props => props.theme.beige};\n    padding: 2px 3px;\n    border-radius: 8px;\n    margin-right: 5px;\n`\nexport const CompaniesList = styled.ul`\n    display: inline-flex;\n    align-items: center;\n    gap: 5px;\n`\n\nexport const Company = styled.img`\n    width: 50px;\n    filter: grayscale(50%);\n    @media screen and (${devices.desktop}) {\n        width: 120px;\n        aspect-ratio: 3/2;\n        object-fit: contain;\n    }\n`","import axios from \"axios\";\n\nconst API_KEY = 'a5ff046cd300d2bbc6befba4bd859295';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING = '/trending/movie/day';\nconst SEARCH = '/search/movie';\nconst MOVIE = '/movie/'\n\nexport const getTrendingMovies = async (page = 1) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        page: page\n    })\n    const response = await axios.get(`${BASE_URL}${TRENDING}?${searchParams}`)\n    return response.data;\n}\n\nexport const searchMovies = async (query, page = 1) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        query: query, \n        page: page\n    })\n    const response = await axios.get(`${BASE_URL}${SEARCH}?${searchParams}`);\n    return response.data\n}\n\nexport const getMovie = async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}?${searchParams}`);\n    return response.data\n}\n\nexport const getMovieReviews = async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}/reviews?${searchParams}`);\n    return response.data\n}\n\nexport const getMovieCredits = async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}/credits?${searchParams}`);\n    return response.data\n}\n\nexport const getMovieVideo= async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}/videos?${searchParams}`);\n    return response.data\n}\n\nexport const getMovieSimilar = async (id) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    })\n    const response = await axios.get(`${BASE_URL}${MOVIE}${id}/similar?${searchParams}`);\n    return response.data\n}"],"names":["castVariants","initial","opacity","isOn","transition","type","exit","useState","cast","setCast","STATUS","status","setStatus","movieId","useParams","useEffect","getMovieCredits","result","getCast","animate","variants","length","map","id","character","profile_path","name","src","imagePath","alt","CastTitle","styled","CastList","Actor","devices","Photo","ActorCredits","ErrorWrapper","props","theme","darkRed","red","ErrorMessage","Error","MovieWrapper","back","PosterWrapper","Slogan","Poster","MovieData","MovieDetail","beige","CompaniesList","Company","API_KEY","BASE_URL","TRENDING","SEARCH","MOVIE","getTrendingMovies","page","searchParams","URLSearchParams","api_key","axios","response","data","searchMovies","query","getMovie","getMovieReviews","getMovieVideo","getMovieSimilar"],"sourceRoot":""}