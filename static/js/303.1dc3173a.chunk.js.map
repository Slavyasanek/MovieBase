{"version":3,"file":"static/js/303.1dc3173a.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","this","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","startLoop","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","ProjectionNode","splitCSSVariableRegex","parseCSSVariable","exec","getVariableValue","fallback","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","property","getPrototypeOf","_get","Reflect","receiver","base","desc","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}